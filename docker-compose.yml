version: "3.9"

services:
  traefik:
    image: traefik:2.7
    command:
      --providers.docker=true
      --providers.docker.exposedByDefault=false
      --entryPoints.http.address=:80
    ports:
      - "80:80"
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public

  api:
    volumes:
      - "./api:/application"
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.api.rule=Host(`api.localhost`)
      - traefik.http.routers.api.entryPoints=http
      - traefik.http.services.api.loadBalancer.server.port=80

  php-fpm:
    user: "$_UID:$_GID"
    volumes:
      - "./api:/application"
    environment:
      APP_SECRET: "$APP_SECRET"
      DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB?serverVersion=15&charset=utf8"

  php-cli:
    user: "$_UID:$_GID"
    volumes:
      - "./api:/application"
      - "~/.config/composer:/.config/composer"
      - "~/.cache/composer:/.cache/composer"
    environment:
      APP_SECRET: "$APP_SECRET"
      DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB?serverVersion=15&charset=utf8"

  postgres:
    image: "postgres:15.2-alpine"
    environment:
      - "POSTGRES_USER=$POSTGRES_USER"
      - "POSTGRES_PASSWORD=$POSTGRES_PASSWORD"
      - "POSTGRES_DB=$POSTGRES_DB"
    ports:
      - "5432:5432"
    volumes:
      - api-postgres:/var/lib/postgresql/data

volumes:
  api-postgres:

networks:
  traefik-public:
    name: traefik-public
