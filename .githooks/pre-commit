#!/bin/bash

if [ `git rev-parse --verify HEAD` ]; then
	AGAINST='HEAD'
else
	AGAINST='ee06326b8417a91222e71eff4afff8c53e80f8e7'
fi

CHANGED_FILES=$(git diff --diff-filter=d --cached --name-only $AGAINST)

PHP_FILES="";
PHP_FILES_COUNT=0;

for f in $CHANGED_FILES; do
    if [[ $f =~ \.(php)$ ]]; then
        PHP_FILES_COUNT=$PHP_FILES_COUNT+1
        PHP_FILES="$PHP_FILES ${f##api/}"
    fi
done;

if [[ $PHP_FILES_COUNT > 0 ]]; then
  BASEDIR=$(dirname "$0")
  SCRIPT_PATH="$BASEDIR/pre-commit.d"
  for hook in ${SCRIPT_PATH}/*; do
    if [ -f "${hook}" ]; then
      echo "Running hook: $hook"
      $hook "$PHP_FILES"

      if [ $? != 0 ]; then
        exit 1
      fi
    else
      echo "Error: file ${hook} not found."
      echo "Aborting commit. Make sure the hook is in $(${SCRIPT_PATH}) and executable."
      echo "You can skip all pre-commit hooks with --no-verify (not recommended)."
      exit 1
    fi
  done
fi
